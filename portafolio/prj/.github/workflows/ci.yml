name: CI
on:
  push:
    branches:
    #  - master
    #  - dev
    #  - tests-linter
    #  - linters
  pull_request:
    branches:
    #  - dev
jobs:
  tests:
    name: Tests and linters
    timeout-minutes: 10
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: postgresql://localhost/postgres
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      RAILS_ENV: test
      # RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
    services:
      db:
        env:
          POSTGRES_HOST_AUTH_METHOD: trust
        image: postgres:12.4
        ports: ['5432:5432']
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v2
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7.1
      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - name: Install dependent libraries
        run: sudo apt-get install libpq-dev
      - name: Cache bundler
        uses: actions/cache@v1
        id: bundler_cache
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-
      - name: Cache yarn
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v1
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Bundle install
        run: |
          bundle config without 'production:staging:development'
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3
      - name: Yarn install
        run: yarn install
      - name: Setup Database
        run: |
          bundle exec rails db:create
          bundle exec rails db:schema:load
      - name: Run rspec
        run: bundle exec rspec
      - name: Run audit
        run: bundle exec rake audit
      - name: Run brakeman
        run: bundle exec rake brakeman
      - name: Run rubocop
        run: bundle exec rake rubocop
      - name: Run erblint
        run: bundler exec erblint --lint-all
      #   run: bundle exec web bundle exec erblint --lint-all
      - name: Run eslint
        run: yarn eslint
      # - name: Run scss_lint
      #   run: bundle exec rake scss_lint
      - name: Upload coverage results
        uses: actions/upload-artifact@v1
        if: always()
        with:
          name: coverage-report
          path: coverage
